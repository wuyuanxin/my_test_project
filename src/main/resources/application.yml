server:
  port: ${my.server.port}
  undertow:
    accesslog:
      dir: /tmp/my_test_project.log
      enabled: true
      pattern: "\"%{c,tranceId}\" \"%{i,versionCode}\" \"%{i,deviceId}\" %h %l %u %t \"%r\" %s %b \"%{i,Referer}\" \"%{i,User-Agent}\""
  compression:
    enabled: true
    min-response-size: 1

spring:
  application:
    name: client
  #开发热启动工具，首先，IDE使用前必须设置相关配置：
  #1)setting->Build,Execution.Deployment->Compiler->Make project automatically 2)Shift+Ctrl+Alt+/，选择Registry，然后勾选compiler.automake.allow.when.app.running
  devtools:
    restart:
      #某些资源在更改时不一定需要触发重启，默认情况下，更改/META-INF/maven ，/META-INF/resources ，/resources ，/static ，/public或/templates中的资源不会触发重启；该配置表示保留上面的默认（情况下的）值并添加其他的排除项
      additional-exclude: generatorConfig.xml,db-mysql.properties
      #排除重启文件，所有其他文件发生更改后即可重启
      #exclude: generatorConfig.xml,db-mysql.properties
      #禁用重启功能
      #enabled: false
  data:
    rest:
      base-path: /api
  #jpa:
  #	database : MYSQL
     # generate-ddl: true # Initialize the schema on startup.
     # hibernate.ddl-auto: update # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
     # open-in-view: false
     # show-sql: true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
     # properties:
      #    hibernate:
       #     jdbc.batch_size: 100
        #    cache.use_second_level_cache: false
         #   order_inserts: true
          #  order_updates: true
           # dialect : org.hibernate.dialect.MySQL5Dialect

  datasource:
        driverClassName: com.mysql.cj.jdbc.Driver
        url: ${my.mysql.url}
        username: ${my.mysql.username}
        password: ${my.mysql.password}

mybatis:
  mapperLocations: classpath*:mapping/*.xml
  typeAliasesPackage: com.my.domain
  #checkConfigLocation: true
  #configLocation: classpath:mybatis-config.xml
  #mybatis.config：mybatis-config.xml配置文件的路径
  #mybatis.typeHandlersPackage：扫描typeHandlers的包
  #mybatis.checkConfigLocation：检查配置文件是否存在
  #mybatis.executorType：设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE

my:
  mysql:
    # url: jdbc:mysql://121.196.217.22:3306/trmdata?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    # url: jdbc:mysql://127.0.0.1:3306/mdpdata?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
     url: jdbc:mysql://localhost:3306/springbootdb?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
     username: root
     password: "123456"
  server:
      port: 7080

eureka:
  instance:
    prefer-ip-address: true #像eureka服务注册信息时，使用ip地址，默认使用hostname(@EnableEurekaClient->服务提供者时使用)
    hostname: client1 #服务名称(@EnableEurekaServer->注册服务时使用)
  server:
    #enable-self-preservation: false #为了便于测试，取消eureka的保护模式，如果启动的话，比如api提供者关闭了，但是eureka仍然保留信息(@EnableEurekaServer->注册服务时使用)
  client:
    #register-with-eureka: false #是否注册到eureka(@EnableEurekaServer->注册服务时使用)
    #fetch-registry: false #是否获取注册信息(@EnableEurekaServer->注册服务时使用)
    service-url:
      defaultZone: http://eureka.server1:9090/eureka/,http://eureka.server2:9091/eureka/,http://eureka.server3:9092/eureka/ #eureka的服务地址，/eureka是固定的
